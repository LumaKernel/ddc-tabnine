*ddc-tabnine.txt*				TabNine Completion for ddc.vim

Author : Luma <world@luma.email>
License: MIT <https://github.com/LumaKernel/ddc-tabnine/blob/main/LICENSE>


==============================================================================
CONTENTS					        *ddc-tabnine-contents*

INTRODUCTION					    |ddc-tabnine-introduction|
INSTALL							 |ddc-tabnine-install|
EXAMPLES						|ddc-tabnine-examples|
PARAMS							  |ddc-tabnine-params|
FUNCTIONS					       |ddc-tabnine-functions|

==============================================================================
INTRODUCTION					    *ddc-tabnine-introduction*

This source collects candidates from TabNine (https://www.tabnine.com).
TabNine binaries are automatically installed when first time completion
starts.

==============================================================================
INSTALL							 *ddc-tabnine-install*

Please install both "ddc.vim" and "denops.vim".

https://github.com/Shougo/ddc.vim
https://github.com/vim-denops/denops.vim

You can trigger the
special comands (https://www.tabnine.com/faq#special_commands) to configure
your TabNine like `TabNine::config` in any buffer.

(Optional) To configure your purchased API key, use `TabNine::config` or
`:exe 'e' ddc_tabnine#config_dir() . '/tabnine_config.json'`.

See also |ddc_tabnine#config_dir()|.

==============================================================================
EXAMPLES						*ddc-tabnine-examples*
>
	call ddc#custom#patch_global('sources', ['tabnine'])
	call ddc#custom#patch_global('sourceOptions', {
	    \ 'tabnine': {
	    \   'mark': 'TN',
	    \   'isVolatile': v:true,
	    \   'maxSize': 200,
	    \ }})
<

==============================================================================
PARAMS							  *ddc-tabnine-params*

						   *ddc-tabnine-param-maxSize*
maxSize		(number)
		Fixed range of looking for words lines above and below your
		cursor position.

		Default: 200

					     *ddc-tabnine-param-maxNumResults*
maxNumResults	(number)
		Max number of results to retrieve. Preferable to use rather
		than built-in's |ddc-source-option-maxCandidates| since this
		is natively implemented by TabNine.

		Default: 5

						*ddc-tabnine-param-storageDir*
storageDir	(string)
		Global only and not configurable by `_`.
		Storage path placement to store binary files.

		Default: <XDG Cache Dir>

==============================================================================
FUNCTIONS					       *ddc-tabnine-functions*

						       *ddc_tabnine#restart()*
ddc_tabnine#restart()
		Restart the TabNine process.

						     *ddc_tabnine#reinstall()*
ddc_tabnine#reinstall()
		Clean all version binaries, reinstall binaries and restart the
		process.

						    *ddc_tabnine#is_running()*
ddc_tabnine#is_running()
		Returns boolean value whether Process is running.

							 *ddc_tabnine#which()*
ddc_tabnine#which()
		Returns string value which binary is used to run.

						       *ddc_tabnine#version()*
ddc_tabnine#version()
		Returns string value by querying TabNine::version to TabNine
		process.

						    *ddc_tabnine#config_dir()*
ddc_tabnine#config_dir()
		Returns string value by querying TabNine::config_dir to TabNine
		process.
Example: >
	command! -bar EditTabNineConfig
	    \ execute 'edit' ddc_tabnine#config_dir() . '/tabnine_config.json'
<

==============================================================================
vim:tw=78:ts=8:noet:ft=help:norl
